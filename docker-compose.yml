services:
  gateway:
    build:
      context: .
      target: gateway
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - ENGINE_URL=http://engine:9090
      - BLOCKCHAIN_URL=http://blockchain:3001
      - DATA_PREP_URL=http://data-prep:3002
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgres://filecoin_user:filecoin_pass@postgres:5432/filecoin_backup?sslmode=disable
    depends_on:
      - redis
      - postgres
      - engine
      - blockchain
    networks:
      - filecoin-network

  engine:
    build:
      context: .
      target: engine
    ports:
      - "9090:9090"
    environment:
      - PORT=9090
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgres://filecoin_user:filecoin_pass@postgres:5432/filecoin_backup?sslmode=disable
    depends_on:
      - redis
      - postgres
    volumes:
      - ./data/uploads:/app/uploads
      - ./data/logs:/app/logs
    networks:
      - filecoin-network

  blockchain:
    build:
      context: .
      target: blockchain
    ports:
      - "3001:3001"
    env_file:
      - ./shared/config/dev.env
    environment:
      - PORT=3001
      - FILECOIN_NODE_URL=${FILECOIN_NODE_URL}
      - FILECOIN_NETWORK=${FILECOIN_NETWORK:-calibration}
      - WALLET_PRIVATE_KEY=${WALLET_PRIVATE_KEY}
      - IPFS_URL=${IPFS_URL}
    volumes:
      - ./data/wallets:/app/data/wallets
      - ./data/config:/app/data/config
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - filecoin-network

  data-prep:
    build:
      context: ./services/data-prep
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=development
      - POSTGRES_URL=postgres://filecoin_user:filecoin_pass@postgres:5432/filecoin_backup?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - UPLOAD_DIR=/app/uploads
      - CAR_OUTPUT_DIR=/app/cars
      - LOG_LEVEL=info
    depends_on:
      - redis
      - postgres
    volumes:
      - ./data/uploads:/app/uploads
      - ./data/cars:/app/cars
      - ./data/logs:/app/logs
    networks:
      - filecoin-network
    entrypoint: ["/bin/sh", "-c", "until /usr/bin/pg_isready -h postgres -p 5432; do echo waiting for postgres; sleep 2; done; node index.js"]

  frontend:
    build:
      context: .
      target: frontend
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - GATEWAY_URL=http://gateway:8080
      - DATA_PREP_URL=http://data-prep:3002
    depends_on:
      - gateway
      - data-prep
    networks:
      - filecoin-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - filecoin-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=filecoin_backup
      - POSTGRES_USER=filecoin_user
      - POSTGRES_PASSWORD=filecoin_pass
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - filecoin-network

networks:
  filecoin-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  car-data:
